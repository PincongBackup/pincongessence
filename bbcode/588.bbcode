
[quote]588. 专栏文章: 网络封锁攻防战：翻墙技术的进化史[/quote]

[b]专栏文章: 网络封锁攻防战：翻墙技术的进化史[/b]
[quote]新时代的防火墙像手术刀，精准迅速，直击命门。以前干掉的是制造和售卖梯子的人，现在连设计梯子的人也要干掉。原本，互联网让知识可以扁平传递，现在“屠梯”行动恐将人们逼回“口耳相传”的模式。未来，“翻墙”可能是一种手艺，如何传承，任重道远。[/quote][img]https://i.imgur.com/vQ8574c.png[/img]
[b]早期网络封锁[/b]
最早的封锁大约是“[url=https://zh.wikipedia.org/wiki/%E5%9F%9F%E5%90%8D%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%BC%93%E5%AD%98%E6%B1%A1%E6%9F%93]DNS投毒[/url]”和“[url=https://zh.wikipedia.org/wiki/IP%E5%B0%81%E9%94%81]IP黑名单[/url]”。
具体来说就是对于特定域名比如 google.com，[b]浏览器解析不到正确的 IP 地址[/b]。即使碰巧解析到了正确的 IP 地址，由于 Google 在亚洲地区的 IP 地址就那么几个，[b]发往这几个 IP 地址的数据包被全部丢弃[/b]（或 TCP Reset），也就导致了用户死活访问不到 google.com。
由于被封的 IP 依然是少数，而 Google 在全球的 IP 数量庞大，于是网友们很快想到了解决方案，就是[b]使用 hosts 指定 IP 地址[/b]。虽然亚洲地区的 IP 被封了，但美国、欧洲甚至是南美洲依然有可以访问的地址，速度慢是慢了点，但总比上不去的好。于是修改 hosts 文件 文件这个方案流行了那么一段时间。
后来封锁升级了，不是针对 IP 地址的了，而是针对每一个网络连接。受限于为数不多的几个出入境节点，网民的每一个出境网络连接实际上都被扫描过一遍。于是网络协议最初设计时，并未考虑封锁这回事，[b]无论是 HTTP 还是 HTTPS，只需要扫描每个连接的前几十个字节，就可以得到其目标地址的域名[/b]。HTTP 是通过其 Host 头，而 HTTPS 是通过 SNI。
至此，[b]针对域名，没有封不掉的，只有不想封的[/b]。


[b]三种代理模式[/b]
在直线连接几乎不可能的之后，那就只能绕路了，也就是代理。代理的主要三种模式是 [url=https://zh.wikipedia.org/wiki/%E7%B6%B2%E8%B7%AF%E6%8F%92%E5%BA%A7]Socks[/url]、[url=https://zh.wikipedia.org/wiki/%E8%B6%85%E6%96%87%E6%9C%AC%E4%BC%A0%E8%BE%93%E5%8D%8F%E8%AE%AE]HTTP[/url] 和 [url=https://zh.wikipedia.org/wiki/%E8%99%9B%E6%93%AC%E7%A7%81%E4%BA%BA%E7%B6%B2%E8%B7%AF]VPN[/url]。
三种模式各有利弊：
[ul][li]Socks 可以代理 TCP 和 UDP 连接，但其数据包是明文的；[/li]
[li]HTTP 可以有 TLS 加持，但只能代理 TCP 连接，对 UDP 无效；[/li]
[li]VPN 可以代理包含 TCP / UDP 在内的各种连接，但流量特征非常明显；[/li]
[/ul]
然后 Shadowsocks 横空出世。
Shadowsocks 本质上是 Socks 的加密版本，可选择多种加密方式。一旦加了密，其传输的数据就无法被第三方检测了。并且 [b]Shadowsocks 在转发数据之前，可以对其目的地进行判断，从而达到一个全局较快的连接速度[/b]，比上述的几个代理方式都要好。


[b]网络连接检测[/b]
由于 Shadowsocks 太过火爆，其作者被公安机关约谈，勒令不得继续参于相关项目的开发。
中国那么多人，要把相关人员一一找出来喝茶，也不是一件容易的事。[b]封锁这事，还得从网络连接着手[/b]。
对于一台国内的机器往一个国外的服务器发送数据的网络连接，有两种检测方式，被动式和主动式。
[b]被动式是指检测方只观察连接中传输的内容[/b]，当内容符合某种模式（比如关键字）的时候，就把连接中断，或者服务器 IP 列入黑名单。上述的所有封锁方式均为被动式。
[b]而主动式指的是[/b]，当观察到一个不可识别的连接时，[b]检测方主动发起一个去往服务器的连接[/b]，通过一些编造的数据，探测出服务器是不是一台代理服务器。


[b]找出对方的漏洞[/b]
Shadowsocks 协议曾被指出一个严重的安全性问题。只需要不到 16 次主动探测，就可以 100% 断定服务器是否在运行 Shadowsocks。
具体来说，初版 Shadowsocks 协议依赖于连接头部的某一个字节来读取目标地址，这个字节的取值只有三种。当这个字节的取值不合法时，Shadowsocks 会快速中断连接，否则继续读取剩下的内容。于是这一特征可被用于探测一个服务器是否为 Shadowsocks 代理。
为了应对这一探测方式，V2Ray 使用了自行研发的 VMess 协议，增加了类似于 SSR 的混淆，伪装常见流量，令识别更困难。
[b]既然代理工具有漏洞，那么检测工具也一会有漏洞[/b]。只要发现并利用这些漏洞，一样可以突破封锁。
曾经有一个项目“西厢计划”，就是利用了检测工具的漏洞，伪造了一些数据包，使它在检测方看上去像一个网络连接，但在目的服务器看来又是另一回事。检测方以为自己已经封锁了该连接，但实际上并没有。
[b]和代理工具的升级一样，检测方的算法也一样可以升级[/b]。西厢计划最后发布的一个版本由于防火长城的更新而无法使用了。


[b]数据流量伪装[/b]
[b]从信息学的角度来说，Shadowsocks 协议是一个近乎完美的协议[/b]。它的数据完全随机，无法 100% 确定这个网络连接是否为 Shadowsocks。
但从另一方面来说，网络数据并不是均匀分布的，保守来说，HTTP 和 HTTPS 流量占据了 70% 以上。而如果一个服务器接收的流量 90% 是杂乱无章的，那么它就很可疑了。虽然检测方不能严格证明那就是 Shadowsocks，但当局的铁拳并不会跟你讲道理。
既然随机数据可疑，那我们就把数据伪装成 HTTP 或者 HTTPS 好了。由于 HTTPS 是大势所趋，并且 [b]HTTPS 传输的内容难以被破解，把代理数据伪装成 HTTPS 也是一个比较合理的选择[/b]。
由于检测方无法判断一个 HTTPS 连接是正常的网站流量，还是代理。如果封锁所有的 HTTPS 流量，那无疑是一个杀敌五百，自损一千的昏招。当然急病乱投医也是有可能的……
[b]虽然流量经过了加密，但加密的只是内容，不能排除还有其它的特征[/b]。比如 TLS (HTTPS 所用的加密协议）的握手环节，客户端和服务器互相发送的数据是有规律的。
对于检测方是否足够强的技术做类似的检测，以及是否有足够的把握只封代理都存在疑惑。但毫无疑问，这将是下一个值得研究的领域。


[b]分布式代理[/b]
这一领域已经被 Lantern 证明为成功或者失败了，取决于你怎么看待 [url=https://zh.wikipedia.org/wiki/%E8%93%9D%E7%81%AF]Lantern[/url]。
虽然 P2P 这一术语最近很热，听上去也很有希望，但实际上它并不适用于翻墙。
翻墙的过程需要【墙内的P】对应【墙外的P】，并不是任意两个 P 都可以自由组合的。而【墙内的IP】往往远多于【墙外的IP】，造成网络拥堵几乎不可避免。
[b]目前对翻墙 P2P 的研究和应用都比较少，前景并不明朗，只能保持观望[/b]。


[b]动用行政手段[/b]


[i]@风之轻语：[/i]

[b]借助强大的国家机器，从源头上消灭翻墙工具[/b]，制造恐怖，令网民无法接触到自由网络。
翻墙软件开发者和使用者被警方骚扰的消息不断传出。以前干掉的是制造和售卖梯子的人，现在连设计梯子的人也要干掉。
GoAgent 的作者也清空了在 GitHub 的主页，只留下了一句话：“[b]Everything that has a beginning has an end[/b]”（天下没有不散的筵席）。
围绕防火长城展开的技术多年来一直在不断的博弈，但当[b]技术解决不了燃眉之急时，简单粗暴的行政手段才是最终的大杀器[/b]。
即使在 ShadowSocks 原作者迫于当局压力删除了 GitHub 上公开代码的情况下，ShadowsocksR、 V2Ray 等众多分支也在其他开发者的维护下持续发展和演进。
[b]而这一切，当局也都在密切地关注着[/b]。


资料来源: 品葱
[url=https://www.pin-cong.com/p/135942/]https://www.pin-cong.com/p/135942/[/url]

